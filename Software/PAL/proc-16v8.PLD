Name            Processor-16V8;
Partno          PLANCK-1;
Revision        01;
Date            22/10/2020;
Designer        Jonathan Foucher;
Company         Six Pixels;
Location        France;
Assembly        None;
Device          g16v8a;

/************************************************************************************/
/* MIT License                                                                      */
/* Copyright (c) 2021 Jonathan Foucher                                              */
/*                                                                                  */
/* Permission is hereby granted, free of charge, to any person obtaining a copy     */
/* of this software and associated documentation files (the "Software"), to deal    */
/* in the Software without restriction, including without limitation the rights     */
/* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell        */
/* copies of the Software, and to permit persons to whom the Software is            */
/* furnished to do so, subject to the following conditions:                         */
/*                                                                                  */
/* The above copyright notice and this permission notice shall be included in all   */
/* copies or substantial portions of the Software.                                  */
/*                                                                                  */
/* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR       */
/* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,         */
/* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE      */
/* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER           */
/* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,    */
/* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE    */
/* SOFTWARE.                                                                        */  
/*                                                                                  */
/************************************************************************************/


/* Pin Map 
        --------
CLK    |1     20| VCC INPUT
IRQ0   |2     19| IRQ_OUT
IRQ1   |3     18| RAM_CS
IRQ2   |4     17| ROM_CS
IRQ3   |5     16| RAM_W
IRQ4   |6     15| NONE
IRQ5   |7     14| SIRQ
SER_IRQ|8     13| INH
A15    |9     12| SSEL
Gnd    |10    11| RW
       --------
*/

Pin 1  =  CLK;
Pin 2  =  IRQ0;
Pin 3  =  IRQ1;
Pin 4  =  IRQ2;
Pin 5  =  IRQ3;
Pin 6  =  IRQ4; 
Pin 7  =  IRQ5;
Pin 8  =  SER_IRQ;
Pin 9  =  A15;
Pin 11 =  RW;
Pin 12 = SSEL;  
Pin 13 = INH; 
Pin 14 = SIRQ; 
Pin 16 = RAM_W; 
Pin 17 = ROM_CS; 
Pin 18 = RAM_CS; 
Pin 19 = IRQ_OUT; 


IRQ_OUT = IRQ0 & IRQ1 & IRQ2 & IRQ3 & IRQ4 & IRQ5 & SIRQ;

RAM_CS = !(!A15 & SSEL);   // RAM is selected when A15 is low AND SSEL is high

ROM_CS = !(A15 & SSEL & INH);   // R0M is selected when A15 is high AND SSEL is high and INH is high

RAM_W = !(CLK & !RW);            // Write to ram when clock is high and RW is low