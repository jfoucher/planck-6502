Name            Processor decoder;
Partno          PLANCK-1;
Revision        01;
Date            22/10/2020;
Designer        Jonathan Foucher;
Company         Six Pixels;
Location        France;
Assembly        None;
Device          p16v8;

/************************************************************************************/
/* MIT License                                                                      */
/* Copyright (c) 2021 Jonathan Foucher                                              */
/*                                                                                  */
/* Permission is hereby granted, free of charge, to any person obtaining a copy     */
/* of this software and associated documentation files (the "Software"), to deal    */
/* in the Software without restriction, including without limitation the rights     */
/* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell        */
/* copies of the Software, and to permit persons to whom the Software is            */
/* furnished to do so, subject to the following conditions:                         */
/*                                                                                  */
/* The above copyright notice and this permission notice shall be included in all   */
/* copies or substantial portions of the Software.                                  */
/*                                                                                  */
/* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR       */
/* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,         */
/* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE      */
/* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER           */
/* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,    */
/* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE    */
/* SOFTWARE.                                                                        */  
/*                                                                                  */
/************************************************************************************/


/* Pin Map 
       --------
NONE   |1     24| Vcc
NONE   |2     23| NONE
CLK    |3     22| VCC INPUT
IRQ1   |4     21| IRQ_OUT
IRQ2   |5     20| RAM_CS
IRQ3   |6     19| ROM_CS
IRQ4   |7     18| RAM_W
IRQ5   |8     17| NONE
INH    |9     16| NONE
SEL    |10    15| NONE
A15    |11    14| NONE
Gnd    |12    13| NONE
       --------
*/

Pin 3  =  CLK;
Pin 4  =  IRQ1;
Pin 5  =  IRQ2;
Pin 6  =  IRQ3;
Pin 7  =  IRQ4;
Pin 8  =  IRQ5; 
Pin 9 =  INH;
Pin 10 =  SSEL;
Pin 11 =  A15;
Pin 13 =  RW;
Pin 22 = VCC_IN;  

/*
 *	Outputs
 *  22V10 output logic macrocell available input terms
 *  Pin Terms
 *  14	8
 *  15	10
 *  16	12
 *  17	14
 *  18	16
 *  19	16
 *  20	14
 *  21	12
 *  22	10
 *  23	8
 */

/*
 * Outputs:  define outputs - all are simple combinatorial
 */


 
Pin 21 = IRQ_OUT;   
Pin 20 = RAM_CS;   
Pin 19 = ROM_CS;  
Pin 18 = RAM_W;  

IRQ_OUT = IRQ1 & IRQ2 & IRQ3 & IRQ4 & IRQ5;

RAM_CS = A15; //!(!A15 & SSEL);   // RAM is selected when A15 is low AND SSEL is high

ROM_CS = !(A15 & SSEL & INH);   // R0M is selected when A15 is high AND SSEL is high and INH is high

RAM_W = !(CLK & !RW);            // Write to ram when clock is high and RW is low