 20 constant maxiter -49 constant minval 50 constant maxval -37 constant mincol 37 constant maxcol 20 5 lshift constant rescale rescale 4 * constant s_escape variable creal variable cimag variable zreal variable zimag variable cnt : zr_sq zreal @ dup rescale */ ; : zi_sq zimag @ dup rescale */ ; : .char s" ..,'~!^:;[/<&?oxox# " drop + 1 type ; : escapes? s_escape > ; : count_and_test? cnt @ 1+ dup cnt ! maxiter > ; : init_vars 5 lshift dup creal ! zreal ! 5 lshift dup cimag ! zimag ! 1 cnt ! ; : doescape zr_sq zi_sq 2dup + escapes? if 2drop true else - creal @ + zreal @ zimag @ rescale */ 1 lshift cimag @ + zimag ! zreal ! count_and_test? then ; : docell init_vars begin doescape until cnt @ .char ; : dorow maxval minval do dup i docell loop drop ; : mandelbrot cr maxcol mincol do i dorow cr loop ; : cmandel cls mandelbrot ; cr .( Welcome to Planck 6502 ) cr 