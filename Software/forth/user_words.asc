 20 constant maxiter -39 constant minval 20 constant maxval -29 constant mincol 29  constant maxcol variable creal variable cimag variable zreal variable zimag variable cnt variable scale_factor variable rescale variable s_escape : zr_sq zreal @ dup rescale @ */ ; : zi_sq zimag @ dup rescale @ */ ; : .char s"    ,-!:=;*/I3X6A8%NW  " drop + 1 type ; : escapes? s_escape @ > ; : count_and_test? cnt @ 1+ dup cnt ! maxiter > ; : init_vars 5 lshift dup creal ! zreal ! 5 lshift dup cimag ! zimag ! scale_factor @ 5 lshift rescale ! rescale @ 4 * s_escape ! 1 cnt ! ; : doescape zr_sq zi_sq 2dup + escapes? if 2drop true else - creal @ + zreal @ zimag @ rescale @ */ 1 lshift cimag @ + zimag ! zreal ! count_and_test? then ; : docell init_vars begin doescape until cnt @ .char ; : dorow maxval minval do dup i docell loop drop ; : mandelbrot cr maxcol mincol do i dorow cr loop ; : uptime  130 @ 132 @ 200 um/mod s>d 60 um/mod s>d 60 um/mod cr . ." h " . ." m " . ." ," 2/ . ." s" cr ; : l 256 0 do i 65409 ! loop ; : lights 0 do l loop ; : delay 0 do loop ; : delay_long 0 do 255 delay loop ; : sl 256 0 do 255 delay i 65409 ! loop ; : slights 0 do sl loop ; : mandel scale_factor @ 0 = if 20 scale_factor ! then mandelbrot ; : tmandel uptime mandel uptime ; : multimandel 18 scale_factor ! 0 do scale_factor @ 1+ 1+ scale_factor ! mandel loop ; : tmultimandel 18 scale_factor ! 0 do scale_factor @ 1+ 1+ scale_factor ! tmandel loop ; 